#Process management
ps -p $$	# find shell name from inside shell script
grep -c "^processor" /proc/cpuinfo	(No of processors)
grep . /proc/$pid/task/*/wchan
strace ls -la 2>&1 | grep localtime
strace -o /tmp/strace.out -s 2000 -fp 12152
grep -c "^processor" /proc/cpuinfo (No of processors)
0: stdin, 1:stdout, 2:stderr
> Redirection (overwriting) >> redirection (appending)
| piping
2>&1 sending stderr to stdout
2>&- discarding errors
&>   sending everything


# find and search
grep pattern -r ./*
egrep "pattern1|pattern2" file.txt           (working)
grep "pattern1\|pattern2" file.txt            (working)
grep -e pattern1 -e pattern2 file.txt
find /ms/dev/OR/orfix*/ -type f|egrep '\.(C|H)$'|xargs grep 'public ORFixEntryT'
find . -type f |egrep '\.(ccp|c|h)$'
find . -type f -regex ".*/.*\.(ccp|c|h)$'
find . -type f \( -name "*.cpp" -or -name "*.h"\)
find . -type f | egrep '\.(C|H)$' | xargs grep –n <pattern>
find . -type f -exec grep MSCO {} \;-print
find . -type f -perm 644 -exec chmod 777 {} \;	(change permission from 644 to 777)
find . -type f 	(regular file)
find . -type d	(directory)
find . -type l	(sym link)
find . -type c 	(character devices)
find . -type b	(block devices)
find / -size +500M	(files bigger than 500MB)
find / -mtime 1		(modified older than 1 day)
find / -atime 1		(access older than 1 day)
find / -ctime 1		(changed older than 1 day)
find / -mmin 1		(modified 1 minute ago)
find / -newer myfile	(files new than myfile)
find . -perm 777		(files with permission 777)
find -iname "query"
find -not -name "query to avoid" or find |! "query to avoid"



Mount Windows shares on Linux
sudo mount -t vboxfs <win share name> /mnt/mount_point
mount.vboxsf windows_share /media/windows_share vboxsf   (/etc/rc.local)
mount -o loop YourImage.iso mountpoint
sudo mount -t cifs -o username=chohan,password=password //192.168.1.2/Share /mnt/Share
sudo mount -t cifs -o username=administrator,password=password,gid=root,uid=chohan,fmask=0777,dmask=0777,iocharset=iso8859-15 //192.168.1.2/H$ /mnt/h
//windowserver/share /mnt/win smbfs auto,gid=users,fmask=0664,dmask=0775,iocharset=iso8859-15, credentials=/etc/sambapasswords 0 0
Next create the password file /etc/sambapasswords:

sudo rmdir /mnt/bios_data
sudo mkdir /mnt/bios_data
sudo mount -t vboxsf bios_data /mnt/bios_data
sudo vi /etc/rc.local  (mount.vboxsf bios_data /mnt/bios_data vboxsf)


vi /etc/sambapasswords
Now add following content:
username = winntuser
password = mypassword
Save and close the file. Make sure only root can access your file:
chown 0.0 /etc/sambapasswords
chmod 600 /etc/sambapasswords




Zip
zip -r archive_name.zip directory_to_compress
unzip archive_name.zip
gzip, gunzip, gzcat, tar -cfz/-fvxz

TAR
tar -cvf archive_name.tar directory_to_compress
tar -xvf archive_name.tar.gz
tar -xvf archive_name.tar -C /tmp/extract_here/

TAR.GZ
tar -zcvf archive_name.tar.gz directory_to_compress
tar -zxvf archive_name.tar.gz
# tar -zxvf archive_name.tar.gz -C /tmp/extract_here/

TAR.BZ2
tar -jcvf archive_name.tar.bz2 directory_to_compress
tar -jxvf archive_name.tar.bz2 -C /tmp/extract_here/
http://www.simplehelp.net/2008/12/15/how-to-create-and-extract-zip-tar-targz-and-tarbz2-files-in-linux/


scp -p <file to copy> <server>:/var/tmp/.	(-p to preserve permission)

Vi editor
VI commands (u,x,r, dd, yy, P)
% matching parenthesis
shift # to highlight all instance of a word
. (dot) repeat last command
:r <file> 	(read/copy file in current file)
:1,10s/foo/bar/g	change 'foo' with 'bar' from line 1 to 10
:.,$s/foo/bar/g		change 'foo' with 'bar' from current line 1 to last line
:%s/foo/bar/g		change 'foo' with 'bar' everywhere
:ls	:buffers	:fils	(lists all files)
:e <file>			(opens yet another file)
:bn					(next file)
:bp					(previous file)
:bx	or x CTRL ^		(move to xth file)
:b# or CTRL SHIFT F6	(toggles between two files)
:bd1				(deletes buffer 1)
set paste			(to set paste mode)
set number			(to display line number)
set ic				(to toggle case sensitive search)
:redo				(to undo and undo)
CTRL e, CTRL y		(to move up/down without moving cursor)
vi -O <file1> <file2>	(to open two files vertically, CTRL w to move between the two)
vi -o <file1> <file2>	(to open two files horizontally, CTRL w to move between the two)
vsp <file>				(to open another file vertically)
hsp <file>				(to open another file horizontally)
ctrl v i j...j l - - escape	(to type some across multiple lines e.g. commenting)

Regex
*	zero or more
?	one or one
+	one or more
egrep [[:digit:]]{3,4} <file>         // search 3 or 4 digits
Regex character classes: [:alnum:],[:alpha:],[:blank:],[:cntrl:],[:upper:],[:punct:],[:space:],[:digit:],[:xdigit:]

Less commands
10j		(to move forward 10 lines)
10k		(to move backward 10 lines)
g		(to move at the start of file)
G		(to move at the end of file)
less <file1> <file2>	(to open multiple files)
-i		(to toggle case sensitivity)

File Transfer using netcat
At server:	/usr/bin/nc -v -l -p 5000 > filename.back
At client:	/usr/bin/nc -v -w 2 <server> 5000 < <file to transfer>


#Disk space
du -a /var/tmp | sort -n -r | head -n 10  (top 10 biggest files)
du -csh /var/tmp	(disk usage)
df -m /var/tmp		(dis free)
df -h /var/tmp
du -hs /var/tmp
ssh <host name> 'cd /var/tmp; df -k .'
for inst in box1 box2 box3 box4; do ssh $inst 'df -h /folder/folder/folder/folder/'; done;

# sed
grep vor_batsopt -r ./*|cut -d":" -f1|xargs sed -i 's/vor_batsopt/vor_edgeopt/g'
sed -i 's/nypvwor/NYWVWOR/' test.csv
cat test.csv|sed 's/NYWVWOR/nyqvwor/'

#Miscellaneous commands
tree -af
> redirection (overwriting), >> redirection (appending), | piping
ls | tee /dev/tty | grep out
2>&1	(sending stderr to stdout)
2>$- 	(discarding errors)
&> 		(sending everything)
rm -Rf
sudo mount -t vboxsf H_DRIVE /media/h_drive
cat <file> | while read line; do echo $line; done
for line in `cat <file>`; do echo $line; done
more, less, head, tail
last, who, w
lpr filename -P printer, lpq, lpstat, lprm
ff, whereis, find, locate
ps -u username, top
watch -n 1 df -h
ctrl z, bg, fg, jobs, &
setenv, env, echo $VAR
To count No of lines in a folder: ( find ./ -name '*' -print0 | xargs -0 cat ) | wc -l 
Within UNIX, convert DOS newlines (CR/LF) to Unix format with this regular expression command: 
sed 's/.$//' file # assumes that all lines end with CR/LF 
Within DOS, convert Unix newlines (LF) to DOS \r\n format with one of these two regular expression commands: 
sed 's/$//' file # method 1 
sed -n p file # method 2 
 Use this standard utility: 
dos2unix fromfile1 tofile 
to extract contents between begin and end in a sample.txt
awk '{ s = substr($0, index($0, "took") + 5); print substr(s, 1,index(s, "ms") - 1) }' recache.txt
grep took sample.txt | cut -c 1-13

tail -n300 "Order Manager BARX.log" | cut -f8 -d"|" | sort | uniq -c 

Starting with Python 2.2, to remove all occurances of any line terminator from the end of the string S without removing other trailing whitespace: 
S.rstrip("\r\n") 

tree –af
cat file.txt |tail -n +30|head -2
rm –Rf
tar -zcvf archive_name.tar.gz directory_to_compress
tar -zxvf archive_name.tar.gz
ls | tee /dev/tty | grep out
IFS=$'\n'       # make newlines the only separator
cat <file> | while read i; do echo $i; done
for i in $(cat <file>); do echo "$i"; done 
cat file|awk -F"=" '{print $2}'

#file copy remotely
tar cvf – file1 file2 file3 |(ssh <remote server> "cat > /var/tmp/test.tar")
tar cvf - file1 file2 file3 |(ssh <remote server> "umask 0000; cd /var/tmp; tar xvf -")
ssh <remote server> "cd /var/tmp; rm -f test.tar"
ssh <remote server> "chmod 777 /var/tmp/file"
scp -p folder/file <remote server>:/var/tmp/. (to preserve permission)
echo "ps -efa|grep or_cboe"|ssh <remote box>|less  (to check remote processes)




#Network management
Setting IP address
auto eth0
iface eth0 inet static
address 192.168.1.6
netmask 255.255.255.0
gateway 192.168.1.254
network 192.168.1.0
broadcast 192.168.1.255

sudo ifconfig eth0 192.168.1.1/24
sudo route add default gw 192.168.1.254

restart by sudo /etc/init.d/networking restart
file: /etc/network/interfaces

Setting up DNS
Enter following in /etc/resolv.conf
nameserver 192.168.1.254

/usr/sbin/traceroute 205.228.67.37
ifconfig -a
netstat -nr
/usr/bin/nc –h
nslookup


# installing firefox from scratch
echo -e "\ndeb http://downloads.sourceforge.net/project/ubuntuzilla/mozilla/apt all main" | sudo tee -a /etc/apt/sources.list > /dev/null
tail /etc/apt/sources.list
sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com C1289A29
sudo apt-get update
sudo apt-get install firefox-mozilla-build


